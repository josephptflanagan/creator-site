{"version":3,"sources":["components/Nav/index.js","utils/helpers.js","components/Home/index.js","components/Blog/index.js","components/Videos/index.js","components/Shop/index.js","components/About/index.js","components/Contact/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","currentPage","handlePageChange","useEffect","string","document","title","charAt","toUpperCase","slice","className","onClick","Home","id","Blog","Videos","Shop","About","Contact","Footer","App","useState","renderPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1b20ee2d.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { capitalizeFirstLetter } from '../../utils/helpers';\r\n\r\nfunction Nav(props) {\r\n    const {\r\n        currentPage,\r\n        handlePageChange\r\n    } = props;\r\n\r\n    useEffect(() => {\r\n        document.title = capitalizeFirstLetter(currentPage);\r\n    }, [currentPage]);\r\n\r\n    return (\r\n        <header className=\"flex-row px-1\">\r\n            <nav>\r\n                <ul className=\"flex-row\">\r\n                    <li className={`mx-2 ${currentPage === \"Home\" && `navActive`}`}>\r\n                        <span onClick={() => handlePageChange(\"Home\")} className={currentPage === \"Home\" ? 'nav-link active' : 'nav-link'}>Home</span>\r\n                    </li>\r\n                    <li className={`mx-2 ${currentPage === \"Blog\" && `navActive`}`}>\r\n                        <span onClick={() => handlePageChange(\"Blog\")} className={currentPage === \"Blog\" ? 'nav-link active' : 'nav-link'}>Blog</span>\r\n                    </li>\r\n                    <li className={`mx-2 ${currentPage === \"Videos\" && `navActive`}`}>\r\n                        <span onClick={() => handlePageChange(\"Videos\")} className={currentPage === \"Videos\" ? 'nav-link active' : 'nav-link'}>Videos</span>\r\n                    </li>\r\n                    <li className={`mx-2 ${currentPage === \"Shop\" && `navActive`}`}>\r\n                        <span onClick={() => handlePageChange(\"Shop\")} className={currentPage === \"Shop\" ? 'nav-link active' : 'nav-link'}>Shop</span>\r\n                    </li>\r\n                    <li className={`mx-2 ${currentPage === \"About\" && `navActive`}`}>\r\n                        <span onClick={() => handlePageChange(\"About\")} className={currentPage === \"About\" ? 'nav-link active' : 'nav-link'}>About</span>\r\n                    </li>\r\n                    <li className={`mx-2 ${currentPage === \"Contact\" && `navActive`}`}>\r\n                        <span onClick={() => handlePageChange(\"Contact\")} className={currentPage === \"Contact\" ? 'nav-link active' : 'nav-link'}>Contact</span>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Nav;","export function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n  \r\n  export function validateEmail(email) {\r\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }","import React from 'react';\r\n\r\nfunction Home() {\r\n    return (\r\n        \r\n        <section className=\"home\">\r\n            <div>\r\n                <h1 id=\"home\">PLACEHOLDER</h1>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nfunction Blog() {\r\n    return (\r\n        \r\n        <section className=\"blog\">\r\n            <div>\r\n                <h1 id=\"blog\">PLACEHOLDER</h1>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Blog;","import React from 'react';\r\n\r\nfunction Videos() {\r\n    return (\r\n        \r\n        <section className=\"videos\">\r\n            <div>\r\n                <h1 id=\"videos\">PLACEHOLDER</h1>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Videos;","import React from 'react';\r\n\r\nfunction Shop() {\r\n    return (\r\n        \r\n        <section className=\"shop\">\r\n            <div>\r\n                <h1 id=\"shop\">PLACEHOLDER</h1>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Shop;","import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        \r\n        <section className=\"about\">\r\n            <div>\r\n                <h1 id=\"about\">Who am I?</h1>\r\n            </div>\r\n            <div className=\"bio\">\r\n                <p>\r\n                    Hello, I'm the Irresolute Cartographer, and this is a little bit of information about who I am.\r\n                </p>\r\n                <br />\r\n                <p>\r\n                    I'm a lifelong (almost) lover of video games, starting young with Warcraft, Railroad Tychoon, and Doom (the originals). I've been playing games since \r\n                    floppy disks were actually floppy. I'm also a lover of maps of all types. I believe that maps can be one of the most effective tools in storytelling,\r\n                    and I've drawn maps for fun since the third grade. Other than gaming and cartography, I enjoy learning as much as I can about almost any topic. In\r\n                    literature I thoroughly enjoy the works of Robert Heinlein, Jerry Pournelle and Larry Niven, especially \"The Moon is a Harsh Mistress,\" \"Lucifer's Hammer,\"\r\n                    and \"Falkenberg's Legion.\"\r\n                </p>\r\n                <br />\r\n                <p>\r\n                   I'm currently a manufacturing/mechanical engineer by trade, though I apsire to move into the world of software development and love making videos for my\r\n                   YouTube channel. I'm a native Texan, where I live with my wife, dog and two cats.\r\n                </p>\r\n\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nfunction Contact() {\r\n    return (\r\n        \r\n        <section className=\"contact\">\r\n            <div>\r\n                <h1 id=\"contact\">PLACEHOLDER</h1>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n        <h2> PLACEHOLDER</h2>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useState } from 'react';\r\nimport Nav from './components/Nav';\r\nimport Home from './components/Home';\r\nimport Blog from './components/Blog';\r\nimport Videos from './components/Videos';\r\nimport Shop from './components/Shop';\r\nimport About from './components/About';\r\nimport Contact from './components/Contact';\r\nimport Footer from \"./components/Footer\";\r\n\r\nfunction App() {\r\n\r\n    const [currentPage, handlePageChange] = useState('Home');\r\n\r\n    const renderPage = () => {\r\n        switch (currentPage) {\r\n            case 'Home':\r\n                return <Home />;\r\n            case 'Blog':\r\n                return <Blog />;\r\n            case 'Videos':\r\n                return <Videos />;\r\n            case 'Shop':\r\n                return <Shop />;\r\n            case 'About':\r\n                return <About />;\r\n            case 'Contact':\r\n                return <Contact />;\r\n            default:\r\n                return <Home />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n            <Nav\r\n                currentPage={currentPage}\r\n                handlePageChange={handlePageChange}\r\n            ></Nav>\r\n            <main>\r\n                <div>{renderPage(currentPage)}</div>\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n  // If you want your app to work offline and load faster, you can change\r\n  // unregister() to register() below. Note this comes with some pitfalls.\r\n  // Learn more about service workers: https://bit.ly/CRA-PWA\r\n  serviceWorker.unregister();"],"sourceRoot":""}