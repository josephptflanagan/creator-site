{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jflanagan.NIECE\\\\Desktop\\\\other\\\\creator-site\\\\client\\\\src\\\\components\\\\EditVideoTags\\\\EditVideoTags.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { useToggle } from '../../hooks';\nimport { QUERY_VIDEO_TAGS } from '../../utils/queries';\nimport { UPDATE_VIDEO_TAGS } from '../../utils/mutations';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './EditVideoTags.css'; // destructure tag objects of current video from props\n\nconst EditTags = ({\n  curTags\n}) => {\n  var _allTags$tags;\n\n  // MODAL TOGGLE\n  const [show, toggleShow] = useToggle(false);\n  const [allTags, setAllTags] = useState([]); // map an array of the ids of current tags to set defaultChecked of checkboxes for matched ids\n\n  const curTagsIds = curTags === null || curTags === void 0 ? void 0 : curTags.map(tag => tag._id); // query to get all tags\n\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_VIDEO_TAGS); // initialize mutation function to update video tags\n\n  const [updateVideoTags] = useMutation(UPDATE_VIDEO_TAGS); // update component state when data arrives from db query\n\n  useEffect(() => {\n    if (data) {\n      setAllTags(data);\n    }\n  }, [data, loading]); // MODAL FUNCTIONALITY\n\n  const handleClose = () => toggleShow();\n\n  const handleShow = () => toggleShow(); // call mutation function with array of updated tag id's\n\n\n  const handleFormSubmit = async e => {\n    e.preventDefault(); // close modal\n\n    handleClose(); // array-like iterable (RadioNodeList) of all checkbox els\n\n    const tags = e.target.elements['updatedTags']; // initialize array of updated tags\n\n    let updatedTags = []; // iterate over RadioNodeList and push the value (tag name) of each checked box into the array\n\n    for (let i = 0; i < tags.length; i++) {\n      tags[i].checked && updatedTags.push(tags[i].value);\n    }\n\n    try {\n      const mutationResponse = await updateVideoTags({\n        variables: {\n          tags: updatedTags\n        }\n      });\n      console.log('mutationResponse', mutationResponse); // window.location.reload()\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, allTags ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    className: \"w-50 btn-sm bskr-btn-purple\",\n    variant: \"primary\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }\n  }, \"Tags\"), /*#__PURE__*/React.createElement(Modal, {\n    className: \"EditVideoTagsModal\",\n    centered: true,\n    show: show,\n    onHide: handleClose,\n    animation: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 8\n    }\n  }, \"Pick the Video's Tags\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, (_allTags$tags = allTags.tags) === null || _allTags$tags === void 0 ? void 0 : _allTags$tags.map(tag => /*#__PURE__*/React.createElement(\"div\", {\n    key: tag._id,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    // type=\"checkbox\"\n    disabled: tag.tagName === 'All',\n    tagName: \"updatedTags\",\n    label: tag.tagName,\n    value: tag._id,\n    defaultChecked: curTagsIds === null || curTagsIds === void 0 ? void 0 : curTagsIds.includes(tag._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary btn-sm bskr-btn-purple\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \"save\"))))) : null);\n};\n\nexport default EditTags;","map":{"version":3,"sources":["C:/Users/jflanagan.NIECE/Desktop/other/creator-site/client/src/components/EditVideoTags/EditVideoTags.js"],"names":["React","useState","useEffect","useMutation","useQuery","useToggle","QUERY_VIDEO_TAGS","UPDATE_VIDEO_TAGS","Modal","Button","Form","EditTags","curTags","show","toggleShow","allTags","setAllTags","curTagsIds","map","tag","_id","loading","data","updateVideoTags","handleClose","handleShow","handleFormSubmit","e","preventDefault","tags","target","elements","updatedTags","i","length","checked","push","value","mutationResponse","variables","console","log","err","error","tagName","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\n\r\nimport { useToggle } from '../../hooks'\r\nimport { QUERY_VIDEO_TAGS } from '../../utils/queries';\r\nimport { UPDATE_VIDEO_TAGS } from '../../utils/mutations';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport './EditVideoTags.css';\r\n\r\n// destructure tag objects of current video from props\r\nconst EditTags = ({ curTags }) => {\r\n  // MODAL TOGGLE\r\n  const [ show, toggleShow ] = useToggle(false);\r\n\r\n\tconst [ allTags, setAllTags ] = useState([]);\r\n\r\n\t// map an array of the ids of current tags to set defaultChecked of checkboxes for matched ids\r\n\tconst curTagsIds = curTags?.map(tag => tag._id);\r\n\r\n  // query to get all tags\r\n\tconst { loading, data } = useQuery(QUERY_VIDEO_TAGS);\r\n\r\n  // initialize mutation function to update video tags\r\n\tconst [ updateVideoTags ] = useMutation(UPDATE_VIDEO_TAGS);\r\n\r\n  // update component state when data arrives from db query\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (data) {\r\n\t\t\t\tsetAllTags(data);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ data, loading ]\r\n\t);\r\n\r\n\t// MODAL FUNCTIONALITY\r\n\tconst handleClose = () => toggleShow();\r\n\tconst handleShow = () => toggleShow();\r\n\r\n  // call mutation function with array of updated tag id's\r\n\tconst handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // close modal\r\n\t\thandleClose();\r\n\t\t// array-like iterable (RadioNodeList) of all checkbox els\r\n\t\tconst tags = e.target.elements['updatedTags'];\r\n\t\t// initialize array of updated tags\r\n\t\tlet updatedTags = [];\r\n\t\t// iterate over RadioNodeList and push the value (tag name) of each checked box into the array\r\n\t\tfor (let i = 0; i < tags.length; i++) {\r\n\t\t\ttags[i].checked && updatedTags.push(tags[i].value);\r\n\t\t}\r\n\r\n    try {\r\n      const mutationResponse = await updateVideoTags({\r\n        variables : {\r\n          tags : updatedTags\r\n        }\r\n\t\t\t});\r\n      console.log('mutationResponse', mutationResponse);\r\n\r\n\t\t\t// window.location.reload()\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}    \r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{allTags ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"w-50 btn-sm bskr-btn-purple\"\r\n\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\tonClick={handleShow}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tTags\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t<Modal\r\n\t\t\t\t\t\tclassName=\"EditVideoTagsModal\"\r\n\t\t\t\t\t\tcentered\r\n\t\t\t\t\t\tshow={show}\r\n\t\t\t\t\t\tonHide={handleClose}\r\n\t\t\t\t\t\tanimation={false}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>Pick the Video's Tags</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t<Form onSubmit={handleFormSubmit}>\r\n\t\t\t\t\t\t\t\t<Form.Group>\r\n                  {/* All is included until refactor of All filter on CreatrGrid */}\r\n\t\t\t\t\t\t\t\t\t{allTags.tags?.map((tag) => (\r\n\t\t\t\t\t\t\t\t\t<div key={tag._id} className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Check\r\n                      // type=\"checkbox\"\r\n                      disabled={tag.tagName === 'All'}\r\n\t\t\t\t\t\t\t\t\t\t\ttagName=\"updatedTags\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel={tag.tagName}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={tag._id}\r\n\t\t\t\t\t\t\t\t\t\t\tdefaultChecked={curTagsIds?.includes(tag._id)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"primary btn-sm bskr-btn-purple\"\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tsave\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t</>\r\n\t\t\t) : null}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default EditTags;"]},"metadata":{},"sourceType":"module"}